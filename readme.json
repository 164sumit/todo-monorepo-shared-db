{
  "name": "README",
  "version": "1.0.0",
  "description": "README file for Todo-application",
  "content": "# Turborepo Monorepo with Shared PostgreSQL Database (Prisma, Next.js, Express.js)\n\nThis is a monorepo setup using **Turborepo** that includes a Next.js frontend and an Express.js backend. Both apps share a common **PostgreSQL** database, managed using **Prisma ORM**.\n\n## Features\n\n- **Next.js** for the frontend\n- **Express.js** for the backend API\n- **PostgreSQL** as the database\n- **Prisma ORM** for database management\n- Monorepo structure using **Turborepo**\n- **TypeScript** for type safety\n- **Redux** for centralized state management\n- **TanStack Query** for optimized API calling\n\n## Setup Instructions\n\n1. Clone the repository:\n   ```sh\n   git clone https://github.com/164sumit/todo-monorepo-shared-db.git\n   cd todo-monorepo-shared-db\n   ```\n\n2. Install dependencies:\n   ```sh\n   npm install\n   ```\n\n3. Run the development server:\n   ```sh\n   npm run dev\n   ```\n\n4. Ensure the PostgreSQL database is up and running, and configure Prisma:\n   ```sh\n   npx prisma migrate dev\n   ```\n\n5. Access the Next.js frontend at `http://localhost:3000` and the Express.js API at `http://localhost:3001`.\n\n## Additional Information\n\n- This project uses **TypeScript** for type safety throughout both the frontend and backend.\n- The **Next.js** frontend uses **Redux** to store all todo items in a centralized store.\n- **TanStack Query** is used for optimizing API calls and ensuring efficient data fetching and state management.\n- Make sure to configure your `.env` file with the necessary database connection strings and environment variables.\n\n## Contributions\n\nFeel free to open issues and submit pull requests. We appreciate all contributions to improve this project.\n\n## License\n\nThis project is licensed under the MIT License. See the [LICENSE](./LICENSE) file for more details.\n"
}
